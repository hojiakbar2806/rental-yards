name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Step 3: Build the Docker image with caching
      - name: Build Docker Image
        run: |
          docker build \
            --cache-from ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest \
            --tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest ./frontend

      # Step 4: Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest

      # Step 5: Verify the Docker image
      - name: Verify Docker Image
        run: docker inspect ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest --format '{{.Id}}'

      # Step 6: Deploy to AWS
      - name: Deploy to AWS
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/ssh_key
          chmod 600 ~/ssh_key

          ssh -o StrictHostKeyChecking=no -i "~/ssh_key" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/rental_yards
            echo "success"

            echo "${{ secrets.ENV_FILE }}" | tr ' ' '\n' > .env

          #   git pull origin main

          #   sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.BACKEND_IMAGE_NAME }}:latest

          #   sudo docker-compose up -d --no-deps --build backend

          #   sudo docker image prune -f
          #   sudo docker container prune -f
          #   sudo docker ps
          # EOF
